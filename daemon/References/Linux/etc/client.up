#!/bin/sh

# init variables

i=1
domains=
fopt=
ndoms=0
nns=0
nl='
'

  

if [ "$1" = "-set" ] ; then
  #direct call to set DNS
  if [ "$#" -eq 2 ]
  then
    dns="nameserver $2"
  else 
    # second argument must contain DNS IP
    exit 1
  fi
else 
  #call from OpenVPN

  # $foreign_option_<n> is something like
  # "dhcp-option DOMAIN example.com" (multiple allowed)
  # or
  # "dhcp-option DNS 10.10.10.10" (multiple allowed)

  # each DNS option becomes a "nameserver" option in resolv.conf
  # if we get one DOMAIN, that becomes "domain" in resolv.conf
  # if we get multiple DOMAINS, those become "search" lines in resolv.conf
  # if we get no DOMAINS, then don't use either domain or search.

  while true; do
    eval fopt=\$foreign_option_${i}
    [ -z "${fopt}" ] && break

    case ${fopt} in
      dhcp-option\ DOMAIN\ *)
            ndoms=$((ndoms + 1))
            domains="${domains} ${fopt#dhcp-option DOMAIN }"
            ;;
      dhcp-option\ DNS\ *)
            nns=$((nns + 1))
            if [ $nns -le 3 ]; then
              dns="${dns}${dns:+$nl}nameserver ${fopt#dhcp-option DNS }"
            else
              printf "%s\n" "Too many nameservers - ignoring after third" >&2
            fi
            ;;
          *)
            printf "%s\n" "Unknown option \"${fopt}\" - ignored" >&2
            ;;
    esac
    i=$((i + 1))
  done

  ds=""
  if [ $ndoms -eq 1 ]; then
    ds="${nl}domain"
  elif [ $ndoms -gt 1 ]; then
    ds="${nl}search"
  fi
fi

# This is the complete file - "$domains" has a leading space already
out="# resolv.conf autogenerated by ${0} (${dev})${nl}${dns}${ds}${domains}"


if [ -e /etc/resolv.conf.vpnsave ] ; then
  # do nothing if we already changed DNS
  exit 0
fi

# Preserve the existing resolv.conf
if [ -e /etc/resolv.conf ] ; then
  mv /etc/resolv.conf /etc/resolv.conf.vpnsave
fi

printf "%s\n" "${out}" > /etc/resolv.conf
chmod 644 /etc/resolv.conf

exit 0
